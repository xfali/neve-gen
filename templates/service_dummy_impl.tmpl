{{- $ModuleName := firstUpper .Name -}}
package {{.Pkg}}

import (
	"github.com/xfali/xlog"
)

type {{$ModuleName}}ServicImpl struct {
	log  xlog.Logger
}

func New{{$ModuleName}}ServicImpl() *{{$ModuleName}}ServicImpl {
	return &{{$ModuleName}}ServicImpl{
		log: xlog.GetLogger(),
	}
}

func (s *{{$ModuleName}}ServicImpl) Query{{$ModuleName}}(request {{$ModuleName}}) ([]{{$ModuleName}}, error) {
    panic("Not Implemented. ")
}

func (s *{{$ModuleName}}ServicImpl) Insert{{$ModuleName}}(request {{$ModuleName}}) (int64, error) {
    panic("Not Implemented. ")
}

func (s *{{$ModuleName}}ServicImpl) Insert{{$ModuleName}}Batch(request ...{{$ModuleName}}) error {
    panic("Not Implemented. ")
}

func (s *{{$ModuleName}}ServicImpl) Update{{$ModuleName}}(request {{$ModuleName}}) (bool, error) {
    panic("Not Implemented. ")
}

func (s *{{$ModuleName}}ServicImpl) Delete{{$ModuleName}}(request {{$ModuleName}}) (bool, error) {
    panic("Not Implemented. ")
}